// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MyComponent should render CreateContact correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateContact />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="well"
      >
        <div
          Style="font-size:25px;"
          className="header"
        >
          <Link
            replace={false}
            to="/"
          >
            <img
              Style="height:50px; width:50px;"
              alt="back"
              src="/back.png"
            />
          </Link>
           
          <h3>
            Create Contact
          </h3>
        </div>
        <br />
        <form
          className="create-form"
          onSubmit={[Function]}
        >
          <div
            className="create-contact-details"
          >
            <div
              className="media"
            >
              <div
                className="media-left"
              >
                <img
                  alt="User-Icon"
                  height="50px"
                  src="/user-icon.png"
                  width="50px"
                />
              </div>
              <div
                className="media-body"
              >
                <input
                  name="id"
                  onChange={[Function]}
                  placeholder="Id"
                  type="text"
                />
                <br />
                <br />
                <input
                  name="name"
                  onChange={[Function]}
                  placeholder="Name"
                  type="text"
                />
                <br />
                <br />
                <input
                  name="handle"
                  onChange={[Function]}
                  placeholder="Handle"
                  type="text"
                />
                <br />
                <br />
                <button
                  className="btn btn-primary"
                  id="save-contact"
                  onClick={[Function]}
                >
                  Add Contact
                </button>
              </div>
            </div>
          </div>
        </form>
      </div>,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            Style="font-size:25px;"
            className="header"
          >
            <Link
              replace={false}
              to="/"
            >
              <img
                Style="height:50px; width:50px;"
                alt="back"
                src="/back.png"
              />
            </Link>
             
            <h3>
              Create Contact
            </h3>
          </div>,
          <br />,
          <form
            className="create-form"
            onSubmit={[Function]}
          >
            <div
              className="create-contact-details"
            >
              <div
                className="media"
              >
                <div
                  className="media-left"
                >
                  <img
                    alt="User-Icon"
                    height="50px"
                    src="/user-icon.png"
                    width="50px"
                  />
                </div>
                <div
                  className="media-body"
                >
                  <input
                    name="id"
                    onChange={[Function]}
                    placeholder="Id"
                    type="text"
                  />
                  <br />
                  <br />
                  <input
                    name="name"
                    onChange={[Function]}
                    placeholder="Name"
                    type="text"
                  />
                  <br />
                  <br />
                  <input
                    name="handle"
                    onChange={[Function]}
                    placeholder="Handle"
                    type="text"
                  />
                  <br />
                  <br />
                  <button
                    className="btn btn-primary"
                    id="save-contact"
                    onClick={[Function]}
                  >
                    Add Contact
                  </button>
                </div>
              </div>
            </div>
          </form>,
        ],
        "className": "well",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "Style": "font-size:25px;",
            "children": Array [
              <Link
                replace={false}
                to="/"
              >
                <img
                  Style="height:50px; width:50px;"
                  alt="back"
                  src="/back.png"
                />
              </Link>,
              " ",
              <h3>
                Create Contact
              </h3>,
            ],
            "className": "header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <img
                  Style="height:50px; width:50px;"
                  alt="back"
                  src="/back.png"
                />,
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "Style": "height:50px; width:50px;",
                  "alt": "back",
                  "src": "/back.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Create Contact",
              },
              "ref": null,
              "rendered": "Create Contact",
              "type": "h3",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="create-contact-details"
            >
              <div
                className="media"
              >
                <div
                  className="media-left"
                >
                  <img
                    alt="User-Icon"
                    height="50px"
                    src="/user-icon.png"
                    width="50px"
                  />
                </div>
                <div
                  className="media-body"
                >
                  <input
                    name="id"
                    onChange={[Function]}
                    placeholder="Id"
                    type="text"
                  />
                  <br />
                  <br />
                  <input
                    name="name"
                    onChange={[Function]}
                    placeholder="Name"
                    type="text"
                  />
                  <br />
                  <br />
                  <input
                    name="handle"
                    onChange={[Function]}
                    placeholder="Handle"
                    type="text"
                  />
                  <br />
                  <br />
                  <button
                    className="btn btn-primary"
                    id="save-contact"
                    onClick={[Function]}
                  >
                    Add Contact
                  </button>
                </div>
              </div>
            </div>,
            "className": "create-form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="media"
              >
                <div
                  className="media-left"
                >
                  <img
                    alt="User-Icon"
                    height="50px"
                    src="/user-icon.png"
                    width="50px"
                  />
                </div>
                <div
                  className="media-body"
                >
                  <input
                    name="id"
                    onChange={[Function]}
                    placeholder="Id"
                    type="text"
                  />
                  <br />
                  <br />
                  <input
                    name="name"
                    onChange={[Function]}
                    placeholder="Name"
                    type="text"
                  />
                  <br />
                  <br />
                  <input
                    name="handle"
                    onChange={[Function]}
                    placeholder="Handle"
                    type="text"
                  />
                  <br />
                  <br />
                  <button
                    className="btn btn-primary"
                    id="save-contact"
                    onClick={[Function]}
                  >
                    Add Contact
                  </button>
                </div>
              </div>,
              "className": "create-contact-details",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="media-left"
                  >
                    <img
                      alt="User-Icon"
                      height="50px"
                      src="/user-icon.png"
                      width="50px"
                    />
                  </div>,
                  <div
                    className="media-body"
                  >
                    <input
                      name="id"
                      onChange={[Function]}
                      placeholder="Id"
                      type="text"
                    />
                    <br />
                    <br />
                    <input
                      name="name"
                      onChange={[Function]}
                      placeholder="Name"
                      type="text"
                    />
                    <br />
                    <br />
                    <input
                      name="handle"
                      onChange={[Function]}
                      placeholder="Handle"
                      type="text"
                    />
                    <br />
                    <br />
                    <button
                      className="btn btn-primary"
                      id="save-contact"
                      onClick={[Function]}
                    >
                      Add Contact
                    </button>
                  </div>,
                ],
                "className": "media",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <img
                      alt="User-Icon"
                      height="50px"
                      src="/user-icon.png"
                      width="50px"
                    />,
                    "className": "media-left",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "alt": "User-Icon",
                      "height": "50px",
                      "src": "/user-icon.png",
                      "width": "50px",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "img",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        name="id"
                        onChange={[Function]}
                        placeholder="Id"
                        type="text"
                      />,
                      <br />,
                      <br />,
                      <input
                        name="name"
                        onChange={[Function]}
                        placeholder="Name"
                        type="text"
                      />,
                      <br />,
                      <br />,
                      <input
                        name="handle"
                        onChange={[Function]}
                        placeholder="Handle"
                        type="text"
                      />,
                      <br />,
                      <br />,
                      <button
                        className="btn btn-primary"
                        id="save-contact"
                        onClick={[Function]}
                      >
                        Add Contact
                      </button>,
                    ],
                    "className": "media-body",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "name": "id",
                        "onChange": [Function],
                        "placeholder": "Id",
                        "type": "text",
                        "value": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "name": "name",
                        "onChange": [Function],
                        "placeholder": "Name",
                        "type": "text",
                        "value": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "name": "handle",
                        "onChange": [Function],
                        "placeholder": "Handle",
                        "type": "text",
                        "value": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Add Contact",
                        "className": "btn btn-primary",
                        "id": "save-contact",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "Add Contact",
                      "type": "button",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "form",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="well"
        >
          <div
            Style="font-size:25px;"
            className="header"
          >
            <Link
              replace={false}
              to="/"
            >
              <img
                Style="height:50px; width:50px;"
                alt="back"
                src="/back.png"
              />
            </Link>
             
            <h3>
              Create Contact
            </h3>
          </div>
          <br />
          <form
            className="create-form"
            onSubmit={[Function]}
          >
            <div
              className="create-contact-details"
            >
              <div
                className="media"
              >
                <div
                  className="media-left"
                >
                  <img
                    alt="User-Icon"
                    height="50px"
                    src="/user-icon.png"
                    width="50px"
                  />
                </div>
                <div
                  className="media-body"
                >
                  <input
                    name="id"
                    onChange={[Function]}
                    placeholder="Id"
                    type="text"
                  />
                  <br />
                  <br />
                  <input
                    name="name"
                    onChange={[Function]}
                    placeholder="Name"
                    type="text"
                  />
                  <br />
                  <br />
                  <input
                    name="handle"
                    onChange={[Function]}
                    placeholder="Handle"
                    type="text"
                  />
                  <br />
                  <br />
                  <button
                    className="btn btn-primary"
                    id="save-contact"
                    onClick={[Function]}
                  >
                    Add Contact
                  </button>
                </div>
              </div>
            </div>
          </form>
        </div>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              Style="font-size:25px;"
              className="header"
            >
              <Link
                replace={false}
                to="/"
              >
                <img
                  Style="height:50px; width:50px;"
                  alt="back"
                  src="/back.png"
                />
              </Link>
               
              <h3>
                Create Contact
              </h3>
            </div>,
            <br />,
            <form
              className="create-form"
              onSubmit={[Function]}
            >
              <div
                className="create-contact-details"
              >
                <div
                  className="media"
                >
                  <div
                    className="media-left"
                  >
                    <img
                      alt="User-Icon"
                      height="50px"
                      src="/user-icon.png"
                      width="50px"
                    />
                  </div>
                  <div
                    className="media-body"
                  >
                    <input
                      name="id"
                      onChange={[Function]}
                      placeholder="Id"
                      type="text"
                    />
                    <br />
                    <br />
                    <input
                      name="name"
                      onChange={[Function]}
                      placeholder="Name"
                      type="text"
                    />
                    <br />
                    <br />
                    <input
                      name="handle"
                      onChange={[Function]}
                      placeholder="Handle"
                      type="text"
                    />
                    <br />
                    <br />
                    <button
                      className="btn btn-primary"
                      id="save-contact"
                      onClick={[Function]}
                    >
                      Add Contact
                    </button>
                  </div>
                </div>
              </div>
            </form>,
          ],
          "className": "well",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "Style": "font-size:25px;",
              "children": Array [
                <Link
                  replace={false}
                  to="/"
                >
                  <img
                    Style="height:50px; width:50px;"
                    alt="back"
                    src="/back.png"
                  />
                </Link>,
                " ",
                <h3>
                  Create Contact
                </h3>,
              ],
              "className": "header",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <img
                    Style="height:50px; width:50px;"
                    alt="back"
                    src="/back.png"
                  />,
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "Style": "height:50px; width:50px;",
                    "alt": "back",
                    "src": "/back.png",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                "type": [Function],
              },
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Create Contact",
                },
                "ref": null,
                "rendered": "Create Contact",
                "type": "h3",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="create-contact-details"
              >
                <div
                  className="media"
                >
                  <div
                    className="media-left"
                  >
                    <img
                      alt="User-Icon"
                      height="50px"
                      src="/user-icon.png"
                      width="50px"
                    />
                  </div>
                  <div
                    className="media-body"
                  >
                    <input
                      name="id"
                      onChange={[Function]}
                      placeholder="Id"
                      type="text"
                    />
                    <br />
                    <br />
                    <input
                      name="name"
                      onChange={[Function]}
                      placeholder="Name"
                      type="text"
                    />
                    <br />
                    <br />
                    <input
                      name="handle"
                      onChange={[Function]}
                      placeholder="Handle"
                      type="text"
                    />
                    <br />
                    <br />
                    <button
                      className="btn btn-primary"
                      id="save-contact"
                      onClick={[Function]}
                    >
                      Add Contact
                    </button>
                  </div>
                </div>
              </div>,
              "className": "create-form",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="media"
                >
                  <div
                    className="media-left"
                  >
                    <img
                      alt="User-Icon"
                      height="50px"
                      src="/user-icon.png"
                      width="50px"
                    />
                  </div>
                  <div
                    className="media-body"
                  >
                    <input
                      name="id"
                      onChange={[Function]}
                      placeholder="Id"
                      type="text"
                    />
                    <br />
                    <br />
                    <input
                      name="name"
                      onChange={[Function]}
                      placeholder="Name"
                      type="text"
                    />
                    <br />
                    <br />
                    <input
                      name="handle"
                      onChange={[Function]}
                      placeholder="Handle"
                      type="text"
                    />
                    <br />
                    <br />
                    <button
                      className="btn btn-primary"
                      id="save-contact"
                      onClick={[Function]}
                    >
                      Add Contact
                    </button>
                  </div>
                </div>,
                "className": "create-contact-details",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="media-left"
                    >
                      <img
                        alt="User-Icon"
                        height="50px"
                        src="/user-icon.png"
                        width="50px"
                      />
                    </div>,
                    <div
                      className="media-body"
                    >
                      <input
                        name="id"
                        onChange={[Function]}
                        placeholder="Id"
                        type="text"
                      />
                      <br />
                      <br />
                      <input
                        name="name"
                        onChange={[Function]}
                        placeholder="Name"
                        type="text"
                      />
                      <br />
                      <br />
                      <input
                        name="handle"
                        onChange={[Function]}
                        placeholder="Handle"
                        type="text"
                      />
                      <br />
                      <br />
                      <button
                        className="btn btn-primary"
                        id="save-contact"
                        onClick={[Function]}
                      >
                        Add Contact
                      </button>
                    </div>,
                  ],
                  "className": "media",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt="User-Icon"
                        height="50px"
                        src="/user-icon.png"
                        width="50px"
                      />,
                      "className": "media-left",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "User-Icon",
                        "height": "50px",
                        "src": "/user-icon.png",
                        "width": "50px",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <input
                          name="id"
                          onChange={[Function]}
                          placeholder="Id"
                          type="text"
                        />,
                        <br />,
                        <br />,
                        <input
                          name="name"
                          onChange={[Function]}
                          placeholder="Name"
                          type="text"
                        />,
                        <br />,
                        <br />,
                        <input
                          name="handle"
                          onChange={[Function]}
                          placeholder="Handle"
                          type="text"
                        />,
                        <br />,
                        <br />,
                        <button
                          className="btn btn-primary"
                          id="save-contact"
                          onClick={[Function]}
                        >
                          Add Contact
                        </button>,
                      ],
                      "className": "media-body",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "name": "id",
                          "onChange": [Function],
                          "placeholder": "Id",
                          "type": "text",
                          "value": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "input",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "name": "name",
                          "onChange": [Function],
                          "placeholder": "Name",
                          "type": "text",
                          "value": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "input",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "name": "handle",
                          "onChange": [Function],
                          "placeholder": "Handle",
                          "type": "text",
                          "value": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "input",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Add Contact",
                          "className": "btn btn-primary",
                          "id": "save-contact",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "Add Contact",
                        "type": "button",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            "type": "form",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`MyComponent should render correctly in "debug" mode 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    debug={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="well"
        >
          <h2
            className="text-center"
          >
            Contacts
          </h2>
        </div>,
        <Route
          exact={true}
          path="/"
          render={[Function]}
        />,
        <Route
          path="/create"
          render={[Function]}
        />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h2
            className="text-center"
          >
            Contacts
          </h2>,
          "className": "well",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Contacts",
            "className": "text-center",
          },
          "ref": null,
          "rendered": "Contacts",
          "type": "h2",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "path": "/create",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="well"
          >
            <h2
              className="text-center"
            >
              Contacts
            </h2>
          </div>,
          <Route
            exact={true}
            path="/"
            render={[Function]}
          />,
          <Route
            path="/create"
            render={[Function]}
          />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h2
              className="text-center"
            >
              Contacts
            </h2>,
            "className": "well",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Contacts",
              "className": "text-center",
            },
            "ref": null,
            "rendered": "Contacts",
            "type": "h2",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "path": "/create",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`MyComponent should render correctly with no props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="well"
        >
          <h2
            className="text-center"
          >
            Contacts
          </h2>
        </div>,
        <Route
          exact={true}
          path="/"
          render={[Function]}
        />,
        <Route
          path="/create"
          render={[Function]}
        />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h2
            className="text-center"
          >
            Contacts
          </h2>,
          "className": "well",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Contacts",
            "className": "text-center",
          },
          "ref": null,
          "rendered": "Contacts",
          "type": "h2",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "path": "/create",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="well"
          >
            <h2
              className="text-center"
            >
              Contacts
            </h2>
          </div>,
          <Route
            exact={true}
            path="/"
            render={[Function]}
          />,
          <Route
            path="/create"
            render={[Function]}
          />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h2
              className="text-center"
            >
              Contacts
            </h2>,
            "className": "well",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Contacts",
              "className": "text-center",
            },
            "ref": null,
            "rendered": "Contacts",
            "type": "h2",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "path": "/create",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
